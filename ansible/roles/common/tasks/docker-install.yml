---
- hosts: common
  become: true
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64

  tasks:
    - name: Docker> Print architecture variables
      debug:
        msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

    - name: Docker> Update and upgrade all packages to the latest version
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Docker> Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: latest
        update_cache: true
    
    - name: Docker> Create directory for Docker's GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Docker> Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present
    
    - name: Docker> Add Docker repository
      apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
          signed-by=/etc/apt/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present
      register: docker_apt_changed

    - name: Docker> Install Docker and related packages
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true
    
    - name: Docker> Add Docker group
      group:
        name: docker
        state: present
    
    - name: Docker> Add user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Docker> Configure Docker daemon to allow insecure nexus registry
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "insecure-registries": ["{{ hostvars[groups['primary'][0]].ansible_host }}:8082"]
          }
        owner: root
        group: root
        mode: '0644'

    - name: Docker> Enable and start Docker services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service
      register: docker_service_changed
    
    - name: Docker> Reboot to allow changes to take place
      reboot:
        reboot_timeout: 3600
      when: docker_apt_changed.changed or docker_service_changed.changed
