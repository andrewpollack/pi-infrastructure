---
- hosts: workers
  become: true
  vars_files:
    - ../vars/vars.yml

  tasks:
    - name: k3s> Check if cgroup configs set
      ansible.builtin.shell:
        cmd: "grep -q '\\bcgroup_enable=cpuset\\b \\bcgroup_enable=memory\\b \\bcgroup_memory=1\\b \\bswapaccount=1\\b' /boot/firmware/cmdline.txt"
      register: grep_result
      changed_when: false
      failed_when: "grep_result.rc == 2"

    - name: k3s> Update cgroup configs if not set
      ansible.builtin.lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: yes
        regexp: "^(.*)$"
        line: "\\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1"
        insertafter: EOF
      when: grep_result.rc == 1
    
    - name: k3s> Reboot to allow kernel config changes to take effect
      reboot:
        reboot_timeout: 3600
      when: grep_result.rc == 1
    
    - name: k3s> Check if k3s_bin exists
      stat:
        path: /usr/local/bin/k3s
      register: k3s_bin
    
    - name: k3s> Write install script
      template:
        src: ../templates/k3s-run.sh
        dest: "/home/{{ ansible_user }}/k3s-run.sh"
        mode: 0755
      register: install_script
    
    - name: k3s> Setup insecure registries
      copy:
        dest: /etc/rancher/k3s/registries.yaml
        content: |
        mirrors:
          "{{ hostvars[groups['primary'][0]].ansible_host }}:8082":
            endpoint:
              - "http://{{ hostvars[groups['primary'][0]].ansible_host }}:8082"
    
    # NOTE(andrewpollack): Relying on https://docs.k3s.io/quick-start for quick start.
    # In longer term, will be nice to extract the steps from https://get.k3s.io/ into
    # the playbook. 
    - name: k3s> Run install script
      command: sh /home/{{ ansible_user }}/k3s-run.sh
      when: install_script.changed or not k3s_bin.stat.exists
