load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_image_index", "oci_load", "oci_push")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//:oci_registry.bzl", "registry")
load("//build_tools/apt:wkhtmltopdf_rules.bzl", "wkhtmltopdf_deps")

IMAGE_NAME = "meals-go"

go_library(
    name = "lib",
    srcs = ["main.go"],
    importpath = "github.com/andrewpollack/pi-infrastructure/containers/meals-go",
    visibility = ["//visibility:private"],
    deps = [
        "//containers/meals-go/config",
        "//containers/meals-go/meal_backend",
        "//containers/meals-go/meal_calendar",
        "//containers/meals-go/meal_db_sync",
        "//containers/meals-go/meal_email",
    ],
)

go_binary(
    name = "bin_amd64",
    embed = [":lib"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    static = "on",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "bin_arm64",
    embed = [":lib"],
    goarch = "arm64",
    goos = "linux",
    pure = "on",
    static = "on",
    visibility = ["//visibility:private"],
)

pkg_tar(
    name = "bin_tar_amd64",
    srcs = [":bin_amd64"],
    files = {
        ":bin_amd64": "/app/bin",
    },
    mode = "0555",
    package_dir = "/app",
)

pkg_tar(
    name = "bin_tar_arm64",
    srcs = [":bin_arm64"],
    files = {
        ":bin_arm64": "/app/bin",
    },
    mode = "0555",
    package_dir = "/app",
)

pkg_tar(
    name = "migrations_tar",
    srcs = glob(["migrations/**"]),
    mode = "0444",
    package_dir = "/migrations",
)

pkg_tar(
    name = "apt_tar_arm64",
    deps = wkhtmltopdf_deps("arm64"),
)

pkg_tar(
    name = "apt_tar_amd64",
    deps = wkhtmltopdf_deps("amd64"),
)

oci_image(
    name = "image_amd64",
    base = "@chainguard_gcc_glibc_linux_amd64//:chainguard_gcc_glibc_linux_amd64",
    entrypoint = ["/app/bin"],
    tars = [
        ":apt_tar_amd64",
        ":bin_tar_amd64",
        ":migrations_tar",
    ],
    user = "root",
    visibility = ["//visibility:public"],
    workdir = "/",
)

oci_image(
    name = "image_arm64",
    base = "@chainguard_gcc_glibc_linux_arm64//:chainguard_gcc_glibc_linux_arm64",
    entrypoint = ["/app/bin"],
    tars = [
        ":apt_tar_arm64",
        ":bin_tar_arm64",
        ":migrations_tar",
    ],
    user = "root",
    visibility = ["//visibility:public"],
    workdir = "/",
)

oci_image_index(
    name = "image_multi",
    images = [
        ":image_amd64",
        ":image_arm64",
    ],
)

oci_load(
    name = "load_amd64",
    image = ":image_amd64",
    repo_tags = [
        IMAGE_NAME + ":amd64",
        IMAGE_NAME + ":latest",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

oci_load(
    name = "load_arm64",
    image = ":image_arm64",
    repo_tags = [
        IMAGE_NAME + ":arm64",
        IMAGE_NAME + ":latest",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
)

alias(
    name = "load",
    actual = select({
        "@platforms//cpu:x86_64": ":load_amd64",
        "@platforms//cpu:arm64": ":load_arm64",
        "//conditions:default": ":load_amd64",
    }),
)

oci_push(
    name = "push",
    image = ":image_multi",
    remote_tags = ["latest"],
    repository = registry + "/" + IMAGE_NAME,
)
